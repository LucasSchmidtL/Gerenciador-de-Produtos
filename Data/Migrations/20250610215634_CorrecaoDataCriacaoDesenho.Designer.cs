// <auto-generated />
using System;
using Gerenciador_de_Produtos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gerenciador_de_Produtos.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250610215634_CorrecaoDataCriacaoDesenho")]
    partial class CorrecaoDataCriacaoDesenho
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Agrupador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgrupadorPaiId")
                        .HasColumnType("int");

                    b.Property<int?>("DesenvolvimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Grupo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Agrupadores");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.AgrupadorComponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgrupadorId")
                        .HasColumnType("int");

                    b.Property<float?>("Altura")
                        .HasColumnType("real");

                    b.Property<int>("ComponenteId")
                        .HasColumnType("int");

                    b.Property<float?>("Comprimento")
                        .HasColumnType("real");

                    b.Property<float?>("Profundidade")
                        .HasColumnType("real");

                    b.Property<float?>("Quantidade")
                        .HasColumnType("real");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AgrupadorId");

                    b.HasIndex("ComponenteId");

                    b.ToTable("AgrupadorComponentes");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.AgrupadorItemERP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgrupadorId")
                        .HasColumnType("int");

                    b.Property<float?>("Altura")
                        .HasColumnType("real");

                    b.Property<float?>("Comprimento")
                        .HasColumnType("real");

                    b.Property<int>("ItemERPId")
                        .HasColumnType("int");

                    b.Property<float?>("Profundidade")
                        .HasColumnType("real");

                    b.Property<float?>("Quantidade")
                        .HasColumnType("real");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AgrupadorId");

                    b.HasIndex("ItemERPId");

                    b.ToTable("AgrupadorItemERPs");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.AgrupadorProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgrupadorId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Variavel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgrupadorId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoAgrupadores");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Componente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Componentes");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.ComponenteItemERP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Altura")
                        .HasColumnType("real");

                    b.Property<int>("ComponenteId")
                        .HasColumnType("int");

                    b.Property<float?>("Comprimento")
                        .HasColumnType("real");

                    b.Property<int>("ItemERPId")
                        .HasColumnType("int");

                    b.Property<float?>("Profundidade")
                        .HasColumnType("real");

                    b.Property<float?>("Quantidade")
                        .HasColumnType("real");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComponenteId");

                    b.HasIndex("ItemERPId");

                    b.ToTable("ComponenteItemERPs");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Desenho", b =>
                {
                    b.Property<long>("DesenhoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DesenhoId"));

                    b.Property<string>("Classificacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DataCriacao")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PerfilId")
                        .HasColumnType("int");

                    b.Property<long?>("Revisao")
                        .HasColumnType("bigint");

                    b.Property<long?>("SolicitacaoAlteracaoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DesenhoId");

                    b.HasIndex("Nome");

                    b.HasIndex("PerfilId");

                    b.ToTable("Desenhos");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.DesenhoItemERP", b =>
                {
                    b.Property<long>("DesenhoId")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemERPId")
                        .HasColumnType("int");

                    b.HasKey("DesenhoId", "ItemERPId");

                    b.HasIndex("ItemERPId");

                    b.ToTable("DesenhoItemERPs");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.DesenhoPerfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<long>("DesenhoId")
                        .HasColumnType("bigint");

                    b.HasKey("PerfilId", "DesenhoId");

                    b.HasIndex("DesenhoId");

                    b.ToTable("DesenhoPerfil");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Equacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Consideracoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Entrada")
                        .HasColumnType("bigint");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NormaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Saida")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Equacao");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.ItemERP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acabamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Altura")
                        .HasColumnType("real");

                    b.Property<float?>("AreaSuperficial")
                        .HasColumnType("real");

                    b.Property<long?>("ChapaAberta")
                        .HasColumnType("bigint");

                    b.Property<int?>("Classificacao")
                        .HasColumnType("int");

                    b.Property<float?>("Comprimento")
                        .HasColumnType("real");

                    b.Property<float?>("ComprimentoMaximo")
                        .HasColumnType("real");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DesenvolvimentoId")
                        .HasColumnType("int");

                    b.Property<string>("ERP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemERPIdOriginal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MateriaPrimaId")
                        .HasColumnType("int");

                    b.Property<int?>("Passo")
                        .HasColumnType("int");

                    b.Property<float?>("PerimetroSolda")
                        .HasColumnType("real");

                    b.Property<float?>("PesoBrutoMetro")
                        .HasColumnType("real");

                    b.Property<float?>("PesoLiquidoMetro")
                        .HasColumnType("real");

                    b.Property<float?>("Profundidade")
                        .HasColumnType("real");

                    b.Property<int?>("QuantidadeDobras")
                        .HasColumnType("int");

                    b.Property<long?>("Revisao")
                        .HasColumnType("bigint");

                    b.Property<long?>("SRId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ItensERP");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.ItemERPRelacionado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("DesenhoId")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemERPId")
                        .HasColumnType("int");

                    b.Property<int>("RelacionadoId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DesenhoId");

                    b.HasIndex("ItemERPId");

                    b.HasIndex("RelacionadoId");

                    b.ToTable("ItemERPRelacionados");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Norma", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("Equacoes")
                        .HasColumnType("bigint");

                    b.Property<long?>("Revisao")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Norma");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("AreaBruta")
                        .HasColumnType("real");

                    b.Property<float?>("AreaEq")
                        .HasColumnType("real");

                    b.Property<float?>("AreaLiq")
                        .HasColumnType("real");

                    b.Property<float?>("Cw")
                        .HasColumnType("real");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DesenhoId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ItemERPId")
                        .HasColumnType("int");

                    b.Property<float?>("Ix")
                        .HasColumnType("real");

                    b.Property<float?>("Ixe")
                        .HasColumnType("real");

                    b.Property<float?>("Ixy")
                        .HasColumnType("real");

                    b.Property<float?>("Iy")
                        .HasColumnType("real");

                    b.Property<float?>("J")
                        .HasColumnType("real");

                    b.Property<float?>("Peso")
                        .HasColumnType("real");

                    b.Property<float?>("Rx")
                        .HasColumnType("real");

                    b.Property<int?>("SecaoId")
                        .HasColumnType("int");

                    b.Property<bool?>("SimetricoX")
                        .HasColumnType("bit");

                    b.Property<bool?>("SimetricoY")
                        .HasColumnType("bit");

                    b.Property<float?>("Sxb")
                        .HasColumnType("real");

                    b.Property<float?>("Sxeb")
                        .HasColumnType("real");

                    b.Property<float?>("Sxet")
                        .HasColumnType("real");

                    b.Property<float?>("Sxt")
                        .HasColumnType("real");

                    b.Property<float?>("Syel")
                        .HasColumnType("real");

                    b.Property<float?>("Syer")
                        .HasColumnType("real");

                    b.Property<float?>("Syl")
                        .HasColumnType("real");

                    b.Property<float?>("Syr")
                        .HasColumnType("real");

                    b.Property<float?>("Zx")
                        .HasColumnType("real");

                    b.Property<float?>("Zy")
                        .HasColumnType("real");

                    b.Property<float?>("jx")
                        .HasColumnType("real");

                    b.Property<float?>("jy")
                        .HasColumnType("real");

                    b.Property<float?>("lye")
                        .HasColumnType("real");

                    b.Property<float?>("p1")
                        .HasColumnType("real");

                    b.Property<float?>("p2")
                        .HasColumnType("real");

                    b.Property<float?>("p3")
                        .HasColumnType("real");

                    b.Property<float?>("ry")
                        .HasColumnType("real");

                    b.Property<float?>("xl")
                        .HasColumnType("real");

                    b.Property<float?>("xo")
                        .HasColumnType("real");

                    b.Property<float?>("xr")
                        .HasColumnType("real");

                    b.Property<float?>("yb")
                        .HasColumnType("real");

                    b.Property<float?>("yo")
                        .HasColumnType("real");

                    b.Property<float?>("yt")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DesenhoId");

                    b.HasIndex("ItemERPId");

                    b.HasIndex("SecaoId");

                    b.ToTable("Perfis");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.PerfilItemERP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemERPId")
                        .HasColumnType("int");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemERPId");

                    b.HasIndex("PerfilId");

                    b.ToTable("PerfilItemERPs");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DesenvolvimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Familia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("NomeComercial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Precificacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.RevisaoItemERP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemERPId")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("Numero")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemERPId");

                    b.ToTable("RevisaoItemERPs");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.RevisaoPerfilItemERP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Numero")
                        .HasColumnType("bigint");

                    b.Property<int>("PerfilItemERPId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerfilItemERPId");

                    b.ToTable("RevisaoPerfilItemERPs");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Secao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("PontoSimetrico")
                        .HasColumnType("bit");

                    b.Property<bool>("SimetricoX")
                        .HasColumnType("bit");

                    b.Property<bool>("SimetricoY")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Secao");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.VariavelAgrupador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgrupadorId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgrupadorId");

                    b.ToTable("VariaveisAgrupadores");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.VariavelComponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComponenteId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComponenteId");

                    b.ToTable("VariaveisComponentes");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.VariavelProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("VariaveisProdutos");
                });

            modelBuilder.Entity("ItemERPTag", b =>
                {
                    b.Property<int>("ItemERPsId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("ItemERPsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ItemERPTag");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.AgrupadorComponente", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Agrupador", "Agrupador")
                        .WithMany("AgrupadorComponentes")
                        .HasForeignKey("AgrupadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gerenciador_de_Produtos.Models.Componente", "Componente")
                        .WithMany("AgrupadorComponentes")
                        .HasForeignKey("ComponenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agrupador");

                    b.Navigation("Componente");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.AgrupadorItemERP", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Agrupador", "Agrupador")
                        .WithMany("AgrupadorItensERP")
                        .HasForeignKey("AgrupadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gerenciador_de_Produtos.Models.ItemERP", "ItemERP")
                        .WithMany("AgrupadorItensERP")
                        .HasForeignKey("ItemERPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agrupador");

                    b.Navigation("ItemERP");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.AgrupadorProduto", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Agrupador", "Agrupador")
                        .WithMany("ProdutoAgrupadores")
                        .HasForeignKey("AgrupadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gerenciador_de_Produtos.Models.Produto", "Produto")
                        .WithMany("ProdutoAgrupadores")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agrupador");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.ComponenteItemERP", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Componente", "Componente")
                        .WithMany("ComponenteItensERP")
                        .HasForeignKey("ComponenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gerenciador_de_Produtos.Models.ItemERP", "ItemERP")
                        .WithMany("ComponenteItemERPs")
                        .HasForeignKey("ItemERPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Componente");

                    b.Navigation("ItemERP");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Desenho", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Perfil", null)
                        .WithMany("Desenhos")
                        .HasForeignKey("PerfilId");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.DesenhoItemERP", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Desenho", "Desenho")
                        .WithMany("DesenhoItemERPs")
                        .HasForeignKey("DesenhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gerenciador_de_Produtos.Models.ItemERP", "ItemERP")
                        .WithMany("DesenhoItemERPs")
                        .HasForeignKey("ItemERPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Desenho");

                    b.Navigation("ItemERP");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.DesenhoPerfil", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Desenho", "Desenho")
                        .WithMany()
                        .HasForeignKey("DesenhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gerenciador_de_Produtos.Models.Perfil", "Perfil")
                        .WithMany("DesenhosPerfil")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Desenho");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.ItemERPRelacionado", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Desenho", "Desenho")
                        .WithMany()
                        .HasForeignKey("DesenhoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gerenciador_de_Produtos.Models.ItemERP", "ItemERP")
                        .WithMany("ItensRelacionados")
                        .HasForeignKey("ItemERPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gerenciador_de_Produtos.Models.ItemERP", "Relacionado")
                        .WithMany()
                        .HasForeignKey("RelacionadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Desenho");

                    b.Navigation("ItemERP");

                    b.Navigation("Relacionado");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Perfil", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Desenho", "Desenho")
                        .WithMany()
                        .HasForeignKey("DesenhoId");

                    b.HasOne("Gerenciador_de_Produtos.Models.ItemERP", "ItemERP")
                        .WithMany("Perfis")
                        .HasForeignKey("ItemERPId");

                    b.HasOne("Gerenciador_de_Produtos.Models.Secao", "Secao")
                        .WithMany()
                        .HasForeignKey("SecaoId");

                    b.Navigation("Desenho");

                    b.Navigation("ItemERP");

                    b.Navigation("Secao");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.PerfilItemERP", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.ItemERP", "ItemERP")
                        .WithMany("PerfilItemERPs")
                        .HasForeignKey("ItemERPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gerenciador_de_Produtos.Models.Perfil", "Perfil")
                        .WithMany("PerfilItemERPs")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemERP");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.RevisaoItemERP", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.ItemERP", "ItemERP")
                        .WithMany("Revisoes")
                        .HasForeignKey("ItemERPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemERP");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.RevisaoPerfilItemERP", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.PerfilItemERP", "PerfilItemERP")
                        .WithMany("Revisoes")
                        .HasForeignKey("PerfilItemERPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilItemERP");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.VariavelAgrupador", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Agrupador", "Agrupador")
                        .WithMany("VariaveisAgrupadores")
                        .HasForeignKey("AgrupadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agrupador");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.VariavelComponente", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Componente", "Componente")
                        .WithMany("VariaveisComponentes")
                        .HasForeignKey("ComponenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Componente");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.VariavelProduto", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.Produto", "Produto")
                        .WithMany("VariaveisProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ItemERPTag", b =>
                {
                    b.HasOne("Gerenciador_de_Produtos.Models.ItemERP", null)
                        .WithMany()
                        .HasForeignKey("ItemERPsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gerenciador_de_Produtos.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Agrupador", b =>
                {
                    b.Navigation("AgrupadorComponentes");

                    b.Navigation("AgrupadorItensERP");

                    b.Navigation("ProdutoAgrupadores");

                    b.Navigation("VariaveisAgrupadores");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Componente", b =>
                {
                    b.Navigation("AgrupadorComponentes");

                    b.Navigation("ComponenteItensERP");

                    b.Navigation("VariaveisComponentes");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Desenho", b =>
                {
                    b.Navigation("DesenhoItemERPs");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.ItemERP", b =>
                {
                    b.Navigation("AgrupadorItensERP");

                    b.Navigation("ComponenteItemERPs");

                    b.Navigation("DesenhoItemERPs");

                    b.Navigation("ItensRelacionados");

                    b.Navigation("PerfilItemERPs");

                    b.Navigation("Perfis");

                    b.Navigation("Revisoes");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Perfil", b =>
                {
                    b.Navigation("Desenhos");

                    b.Navigation("DesenhosPerfil");

                    b.Navigation("PerfilItemERPs");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.PerfilItemERP", b =>
                {
                    b.Navigation("Revisoes");
                });

            modelBuilder.Entity("Gerenciador_de_Produtos.Models.Produto", b =>
                {
                    b.Navigation("ProdutoAgrupadores");

                    b.Navigation("VariaveisProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
